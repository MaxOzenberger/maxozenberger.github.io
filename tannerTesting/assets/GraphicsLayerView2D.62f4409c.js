import{H as p,c$ as a,dS as o,a as g,a5 as s,a6 as m,a7 as l}from"./index.3255d2a5.js";import{f as c}from"./LayerView2D.faad288b.js";import{i as n}from"./GraphicContainer.b56922f6.js";import{a as d}from"./GraphicsView2D.9477d269.js";import{u}from"./LayerView.cc5af741.js";import"./Container.f0dd2697.js";import"./EffectView.ab0cb7da.js";import"./definitions.1d569ae6.js";import"./enums.3c1fa5b5.js";import"./Texture.d66dc1cb.js";import"./color.18cd4954.js";import"./enums.9a5c29c3.js";import"./VertexElementDescriptor.5da9dfe9.js";import"./number.dcd3e86c.js";import"./BaseGraphicContainer.5e2911c8.js";import"./FeatureContainer.3cd0def7.js";import"./AttributeStoreView.a805ba6a.js";import"./TiledDisplayObject.2607ae61.js";import"./visualVariablesUtils.313d5012.js";import"./visualVariablesUtils.fc657d78.js";import"./VertexArrayObject.ad007c8f.js";import"./TileContainer.39dd4e2d.js";import"./WGLContainer.53e4a52c.js";import"./vec4f32.c3d64d30.js";import"./ProgramTemplate.058b26d9.js";import"./MaterialKey.3d16bafa.js";import"./alignmentUtils.ba8835fe.js";import"./utils.e5643e7e.js";import"./StyleDefinition.dc47b5d4.js";import"./config.86ceb802.js";import"./GeometryUtils.ccd3b111.js";import"./earcut.a219bf29.js";import"./vec3f32.4d8dc001.js";import"./cimAnalyzer.2e975d1d.js";import"./fontUtils.a84c0faf.js";import"./BidiEngine.f5b8c89f.js";import"./GeometryUtils.6fd53e6d.js";import"./Rect.e8e4d18d.js";import"./callExpressionWithFeature.565c4416.js";import"./floatRGBA.7b501bd7.js";import"./normalizeUtilsSync.95f750ca.js";import"./Matcher.19c09547.js";import"./tileUtils.dbdde791.js";import"./TurboLine.cfd1c2a2.js";import"./ExpandedCIM.31fce9f6.js";import"./schemaUtils.1fd0b466.js";import"./createSymbolSchema.0873edf1.js";import"./util.c874f147.js";import"./ComputedAttributeStorage.6996e7f3.js";import"./arcadeTimeUtils.7055c5d7.js";import"./centroid.193a93e9.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(u){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new d({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new n(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof a?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):o.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const di=e;export{di as default};
