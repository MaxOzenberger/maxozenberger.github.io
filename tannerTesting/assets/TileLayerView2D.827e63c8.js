import{e6 as w,e7 as y,e8 as I,e9 as V,ea as v,J as H,eb as T,W as l,bW as c,s as q,a5 as o,a6 as g,a7 as U}from"./index.3255d2a5.js";import"./Rasterizer.f4189955.js";import"./EffectView.ab0cb7da.js";import"./Container.f0dd2697.js";import"./BufferPool.2da87f69.js";import"./color.18cd4954.js";import"./WGLContainer.53e4a52c.js";import"./vec4f32.c3d64d30.js";import"./enums.3c1fa5b5.js";import"./Texture.d66dc1cb.js";import"./ProgramTemplate.058b26d9.js";import"./MaterialKey.3d16bafa.js";import"./utils.e5643e7e.js";import"./VertexArrayObject.ad007c8f.js";import"./number.dcd3e86c.js";import"./StyleDefinition.dc47b5d4.js";import"./enums.7f1ae3cd.js";import"./MagnifierPrograms.4bede4dd.js";import"./OrderIndependentTransparency.43c6e481.js";import"./floatRGBA.7b501bd7.js";import"./webgl-debug.bb689b12.js";import{a as b}from"./GraphicsView2D.9477d269.js";import"./AttributeStoreView.a805ba6a.js";import"./earcut.a219bf29.js";import"./vec3f32.4d8dc001.js";import{t as Q,o as f,n as d}from"./imageUtils.b6567b42.js";import{f as S}from"./LayerView2D.faad288b.js";import{n as C}from"./HighlightGraphicContainer.006af201.js";import{u as k}from"./LayerView.cc5af741.js";import{i as F}from"./RefreshableLayerView.d7e6fba9.js";import{P,S as G}from"./MapServiceLayerViewHelper.e9327185.js";import"./_commonjsHelpers.4421ccc9.js";import"./cimAnalyzer.2e975d1d.js";import"./fontUtils.a84c0faf.js";import"./BidiEngine.f5b8c89f.js";import"./GeometryUtils.6fd53e6d.js";import"./enums.9a5c29c3.js";import"./alignmentUtils.ba8835fe.js";import"./definitions.1d569ae6.js";import"./Rect.e8e4d18d.js";import"./callExpressionWithFeature.565c4416.js";import"./rasterizingUtils.35b0a2ca.js";import"./VertexElementDescriptor.5da9dfe9.js";import"./config.86ceb802.js";import"./GeometryUtils.ccd3b111.js";import"./imageutils.2b310abc.js";import"./Matcher.19c09547.js";import"./visualVariablesUtils.313d5012.js";import"./visualVariablesUtils.fc657d78.js";import"./tileUtils.dbdde791.js";import"./TurboLine.cfd1c2a2.js";import"./ExpandedCIM.31fce9f6.js";import"./CircularArray.e19cffa8.js";import"./ComputedAttributeStorage.6996e7f3.js";import"./arcadeTimeUtils.7055c5d7.js";import"./centroid.193a93e9.js";import"./basicInterfaces.f8f3b23b.js";import"./normalizeUtilsSync.95f750ca.js";import"./schemaUtils.1fd0b466.js";import"./createSymbolSchema.0873edf1.js";import"./util.c874f147.js";import"./TiledDisplayObject.2607ae61.js";import"./BitmapTileContainer.576c494b.js";import"./Bitmap.a6f40812.js";import"./TileContainer.39dd4e2d.js";import"./BaseGraphicContainer.5e2911c8.js";import"./FeatureContainer.3cd0def7.js";import"./scaleUtils.c6c8857b.js";import"./floorFilterUtils.4de71259.js";import"./sublayerUtils.81ed8bc5.js";import"./popupUtils.46d32bd9.js";const R=[0,0];let h=class extends F(Q(S(k))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}update(t){var e;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(e=this._highlightView)==null||e.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,i)=>this.fetchTile(e,i)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new b({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new C(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new G({createFetchPopupFeaturesQueryGeometry:(i,r)=>v(i,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(i,r)=>{e.graphicUpdateHandler({graphic:i,property:r})},layerView:this,updatingHandles:this.updatingHandles})}this.requestUpdate(),this.addAttachHandles(H(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,e){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,e):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):{remove(){}}}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return T((e=this.layer.tileInfo)==null?void 0:e.spatialReference,t)}async doRefresh(){!this.attached||this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach(t=>this._enqueueTileFetch(t)))}isUpdating(){var t,e;return(e=(t=this._fetchQueue)==null?void 0:t.updating)!=null?e:!1}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(R,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(e),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:n=0}=e;if(!i)try{return await this._fetchImage(t,r)}catch(s){if(!l(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(n<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const u=new c(m),_=await this.fetchTile(u,{...e,resamplingLevel:n+1});return d(this._tileInfoView,_,u,t)}}throw s}const a=new c(0,0,0,0);let p;try{if(await i.fetchAvailabilityUpsample(t.level,t.row,t.col,a,{signal:r}),a.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);p=await this._fetchImage(a,r)}catch(s){if(l(s))throw s;p=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,p,a,t):p}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){l(e)||q.getLogger(this.declaredClass).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}};o([g()],h.prototype,"_fetchQueue",void 0),o([g()],h.prototype,"resampling",null),h=o([U("esri.views.2d.layers.TileLayerView2D")],h);const $t=h;export{$t as default};
