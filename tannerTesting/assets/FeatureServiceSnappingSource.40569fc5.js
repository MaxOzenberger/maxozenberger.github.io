import{p as W,iR as Z,a5 as s,a6 as r,a7 as b,a8 as C,a as h,nD as q,t as F,e1 as z,J as S,e_ as J,e$ as B,K as I,jq as G,c$ as j,bF as X,mH as K,o5 as Q,nw as Y,lY as A,G as ee,fK as te,au as ie,dX as se,jR as ne,db as ae,i$ as re,bn as oe,eV as le,ae as de,o6 as he,a3 as ue,k as L,o7 as pe,o8 as ce,eB as _,b2 as ye,cI as ge,eh as fe,jL as ve,l2 as V,o9 as we}from"./index.3255d2a5.js";import{W as _e,$ as me,a as Se}from"./boundedPlane.91a64206.js";import{i as be,p as Ie}from"./queryEngineUtils.fa9048f7.js";import{h as Oe}from"./WorkerHandle.bbb1002a.js";import"./sphere.67ec4acb.js";import"./mat3f64.9180efcb.js";import"./mat4f64.9070f685.js";import"./quatf64.1dc83f1c.js";import"./lineSegment.1a0fd96e.js";import"./plane.a0a08b54.js";import"./VertexSnappingCandidate.73be13fb.js";import"./PointSnappingHint.08747e02.js";function $(e,t){return me(t.extent,D),Se(D,W(ke,e.x,e.y,0))}const D=_e(),ke=Z();let g=class extends C{get tiles(){const e=this.tilesCoveringView,t=h(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort((n,a)=>$(t,n)-$(t,a)),e}_scaleEnabled(){return q(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||F(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:n}=t,a=[];for(const{row:i,colFrom:l,colTo:d}of e)for(let o=l;o<=d;o++){const u=t.normalizeCol(o),p=new z(null,n,i,u);this.tileInfo.updateTileInfo(p),a.push(p)}return a}get tileInfo(){var e,t;return(t=(e=this.view.featuresTilingScheme)==null?void 0:e.tileInfo)!=null?t:null}get tileSize(){return h(this.tileInfo)?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(S(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.state)==null?void 0:t.viewpoint},()=>this.notifyChange("tilesCoveringView"),J))}};s([r({readOnly:!0})],g.prototype,"tiles",null),s([r({readOnly:!0})],g.prototype,"_scaleEnabled",null),s([r({readOnly:!0})],g.prototype,"tilesCoveringView",null),s([r({readOnly:!0})],g.prototype,"tileInfo",null),s([r({readOnly:!0})],g.prototype,"tileSize",null),s([r({constructOnly:!0})],g.prototype,"view",void 0),s([r({constructOnly:!0})],g.prototype,"layer",void 0),s([r()],g.prototype,"pointOfInterest",void 0),g=s([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],g);var N;(function(e){e[e.INVISIBLE=0]="INVISIBLE",e[e.VISIBLE_WHEN_EXTENDED=1]="VISIBLE_WHEN_EXTENDED",e[e.VISIBLE_ON_SURFACE=2]="VISIBLE_ON_SURFACE"})(N||(N={}));let f=class extends B{get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(h(t)){const n=e.map(a=>$(t,a));for(let a=1;a<n.length;a++)if(n[a-1]>n[a])return e.sort((i,l)=>$(t,i)-$(t,l)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map(He)}get tileInfo(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())!=null?t:null}get tileSize(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tileSize)!=null?t:256}get _effectivePointOfInterest(){var t;const e=this.pointOfInterest;return h(e)?e:(t=this.view.pointsOfInterest)==null?void 0:t.focus.location}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.handles.add(S(()=>this.view.featureTiles,e=>{this.handles.remove(U),e&&this.handles.add(e.addClient(),U)},I))}_filterTiles(e){return F(e)?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>$e&&t.measures.visibility===N.VISIBLE_ON_SURFACE)}};function He({lij:[e,t,n],extent:a}){return new z(`${e}/${t}/${n}`,e,t,n,a)}s([r({readOnly:!0})],f.prototype,"tiles",null),s([r({readOnly:!0})],f.prototype,"tilesCoveringView",null),s([r({readOnly:!0})],f.prototype,"tileInfo",null),s([r({readOnly:!0})],f.prototype,"tileSize",null),s([r({constructOnly:!0})],f.prototype,"view",void 0),s([r()],f.prototype,"pointOfInterest",void 0),s([r()],f.prototype,"_effectivePointOfInterest",null),f=s([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],f);const $e=50,U="feature-tiles",Ee=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends C{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=Ee.map(e=>new G({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=l=>{if(h(l.label))return l.label;let d=l.lij.toString();return h(l.loadPriority)&&(d+=` (${l.loadPriority})`),d},t=this.getTiles(),n=new Array,a=new Set((this._labels.size,this._labels.keys()));t.forEach((l,d)=>{const o=l.lij.toString();a.delete(o);const u=l.lij[0],p=l.geometry;if(this.enablePolygons&&!this._polygons.has(o)){const w=new j({geometry:p,symbol:this._symbols[u%this._symbols.length]});this._polygons.set(o,w),n.push(w)}if(this.enableLabels){const w=e(l),k=d/(t.length-1),v=A(0,200,k),E=A(20,6,k)/.75,M=h(l.loadPriority)&&l.loadPriority>=t.length,R=new X([v,M?0:v,M?0:v]),x=this.view.type==="3d"?()=>new K({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new Q({text:w,halo:{color:"white",size:1/.75},material:{color:R},size:E})]}):()=>new Y({text:w,haloColor:"white",haloSize:1/.75,color:R,size:E}),T=this._labels.get(o);if(T){const H=x();(F(T.symbol)||JSON.stringify(H)!==JSON.stringify(T.symbol))&&(T.symbol=H)}else{const H=new j({geometry:p.extent.center,symbol:x()});this._labels.set(o,H),n.push(H)}}});const i=new Array;a.forEach(l=>{const d=this._polygons.get(l);d!=null&&(i.push(d),this._polygons.delete(l));const o=this._labels.get(l);o!=null&&(i.push(o),this._labels.delete(l))}),this.view.graphics.removeMany(i),this.view.graphics.addMany(n)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};s([r({constructOnly:!0})],O.prototype,"view",void 0),s([r({readOnly:!0})],O.prototype,"updating",void 0),s([r()],O.prototype,"enabled",null),O=s([b("esri.views.support.TileTreeDebugger")],O);let P=class extends O{constructor(e){super(e),this._handles=new ee}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(te(()=>clearInterval(e)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(i=>{e.set(i.data.id,i.featureCount)}),this._debugInfo.pendingTiles.forEach(i=>{e.set(i.data.id,i.featureCount),t.set(i.data.id,i.state)});const n=i=>{var o;const l=t.get(i),d=(o=e.get(i))!=null?o:"?";return l?`${l}:${d}
${i}`:`store:${d}
${i}`},a=new Map;return this._debugInfo.storedTiles.forEach(i=>{a.set(i.data.id,i.data)}),this._debugInfo.pendingTiles.forEach(i=>{a.set(i.data.id,i.data)}),Array.from(a.values()).map(i=>({lij:[i.level,i.row,i.col],geometry:ie.fromExtent(se(i.extent,this.view.spatialReference)),label:n(i.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};s([r({constructOnly:!0})],P.prototype,"handle",void 0),P=s([b("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],P);let c=class extends B{get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const n=[];for(const{points:a}of t)for(const{z:i}of a)n.push(i);return{elevations:n,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new Te(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var i;const n=this._serviceInfoFromLayer(e.layer);if(F(n))return;const a={configuration:this._convertConfiguration(e.configuration),serviceInfo:n,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(i=e.layer.elevationInfo)==null?void 0:i.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const n=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",n,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const n=e.point,a={distance:e.distance,mode:e.mode,point:ne(n[0],n[1],n[2],e.coordinateHelper.spatialReference.toJSON()),types:e.types,filter:h(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(a,t)}async updateTiles(e,t){const n={tiles:e.tiles,tileInfo:h(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",n,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var d,o,u,p,w,k;const n=this._editId++,a={id:n};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",a,t));const i=await this.updatingHandles.addPromise(ae(e.result,t)),l={id:n,edits:{addedFeatures:(o=(d=i.addedFeatures)==null?void 0:d.map(({objectId:v})=>v).filter(h))!=null?o:[],deletedFeatures:(p=(u=i.deletedFeatures)==null?void 0:u.map(({objectId:v,globalId:E})=>({objectId:v,globalId:E})))!=null?p:[],updatedFeatures:(k=(w=i.updatedFeatures)==null?void 0:w.map(({objectId:v})=>v).filter(h))!=null?k:[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",l,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:h(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){var t,n,a;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:(n=(t=e.parsedUrl)==null?void 0:t.path)!=null?n:"",fields:e.fields.map(i=>i.toJSON()),geometryType:re.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(a=e.timeInfo)==null?void 0:a.toJSON()}}};s([r({constructOnly:!0})],c.prototype,"schedule",void 0),s([r({constructOnly:!0})],c.prototype,"hasZ",void 0),s([r({constructOnly:!0})],c.prototype,"elevationAlignPointsInFeatures",void 0),s([r({constructOnly:!0})],c.prototype,"queryForSymbologySnapping",void 0),s([r({readOnly:!0})],c.prototype,"updating",null),s([r({readOnly:!0})],c.prototype,"availability",void 0),s([r()],c.prototype,"_workerHandleUpdating",void 0),c=s([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],c);class Te extends Oe{constructor(t,n){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:n})}}let m=class extends C{get tiles(){return[new z("0/0/0",0,0,0,oe(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new le({origin:new de({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new he({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};s([r({readOnly:!0})],m.prototype,"tiles",null),s([r({readOnly:!0})],m.prototype,"tileInfo",null),s([r({readOnly:!0})],m.prototype,"tileSize",null),s([r({constructOnly:!0})],m.prototype,"layer",void 0),s([r()],m.prototype,"pointOfInterest",void 0),m=s([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],m);let y=class extends ue(C){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=h(e)?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){var e,t;return(t=(e=this._workerHandle)==null?void 0:e.availability)!=null?t:0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._workerHandle=null,this._debug=null}initialize(){var n;let e;const t=this.view;if(h(t))switch(t.type){case"2d":this._tilesOfInterest=new g({view:t,layer:this._layer}),e=this._workerHandle=new c;break;case"3d":{const{resourceController:a}=t,i=this._layer,l=t.whenLayerView(i);this._tilesOfInterest=new f({view:t}),e=this._workerHandle=new c({schedule:o=>a.immediate.schedule(o),hasZ:this._layer.hasZ&&((n=this._layer.returnZ)!=null?n:!0),elevationAlignPointsInFeatures:async(o,u)=>{const p=await l;return L(u),p.elevationAlignPointsInFeatures(o,u)},queryForSymbologySnapping:async(o,u)=>{const p=await l;return L(u),p.queryForSymbologySnapping(o,u)}});const d=new pe(null);l.then(o=>d.set(o)),this.addHandles([t.elevationProvider.on("elevation-change",({context:o})=>{const{elevationInfo:u}=i;ce(o,u)&&_(e.notifyElevationSourceChange())}),S(()=>i.elevationInfo,()=>_(e.notifyElevationSourceChange()),I),S(()=>ye(d.get(),({processor:o})=>o==null?void 0:o.renderer),()=>_(e.notifySymbologyChange()),I),S(()=>ge(d.get(),!1,o=>o.symbologySnappingSupported),o=>_(e.setSymbologySnappingSupported(o)),I),fe(()=>{var o;return(o=ve(d.get()))==null?void 0:o.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}else this._tilesOfInterest=new m({layer:this._layer}),e=this._workerHandle=new c;this.handles.add([V(e)]),_(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add(()=>this._updateTilesParameters,()=>_(e.updateTiles(this._updateTilesParameters,null)),I),this.handles.add([S(()=>this.configuration,a=>_(e.configure(a,null)),J)]),h(t)&&this.handles.add(S(()=>we.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,a=>{a&&!this._debug?(this._debug=new P({view:t,handle:e}),this.handles.add(V(this._debug),"debug")):!a&&this._debug&&this.handles.remove("debug")},I)),this.handles.add(this.layerSource.layer.on("apply-edits",a=>{_(e.applyEdits(a,null))}))}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:n,point:a}=e;this._tilesOfInterest.pointOfInterest=n.arrayToPoint(a);const i=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(l=>be(l,i))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return Ie(this.view)}};s([r({constructOnly:!0})],y.prototype,"spatialReference",void 0),s([r({constructOnly:!0})],y.prototype,"layerSource",void 0),s([r({constructOnly:!0})],y.prototype,"view",void 0),s([r()],y.prototype,"_tilesOfInterest",void 0),s([r({readOnly:!0})],y.prototype,"_updateTilesParameters",null),s([r({readOnly:!0})],y.prototype,"updating",null),s([r({readOnly:!0})],y.prototype,"configuration",null),s([r({readOnly:!0})],y.prototype,"availability",null),s([r()],y.prototype,"_getGroundElevation",null),y=s([b("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],y);export{y as FeatureServiceSnappingSource};
