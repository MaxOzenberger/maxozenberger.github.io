import{gf as C,as as S,ae as j,j as A,aA as R,eu as q,aQ as B,gg as V,gh as O,z as k,gi as G,gj as Y,gk as _,gl as Q,gm as U,gn as Z,go as H,gp as J,gq as K,gr as L,gs as W}from"./index.3255d2a5.js";let y=null;function X(e,a,s){return e.x<0?e.x+=a:e.x>s&&(e.x-=a),e}function aa(e,a,s,l){const n=C(s)?S(s):null,o=n?Math.round((n.valid[1]-n.valid[0])/a.scale[0]):null;return e.map(t=>{const i=new j(A(t.geometry));return R(a,i,i,i.hasZ,i.hasM),t.geometry=n?X(i,o,l[0]):i,t})}function ea(e,a=18,s,l,n,o){const t=new Float64Array(n*o);a=Math.round(k(a));let i=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY,u=0,f=0,d=0,c=0;const z=G(l,s);for(const{geometry:T,attributes:v}of e){const{x:p,y:m}=T,x=Math.max(0,p-a),$=Math.max(0,m-a),E=Math.min(o,m+a),D=Math.min(n,p+a),P=+z(v);for(let g=$;g<E;g++)for(let h=x;h<D;h++){const M=g*n+h,b=Y(h-p,g-m,a),N=t[M];u=t[M]+=b*P;const F=u-N;f+=F,d+=F*F,u<i&&(i=u),u>r&&(r=u),c++}}if(!c)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const I=(r-i)/2;return{mean:f/c,stdDev:Math.sqrt((d-f*f/c)/c),min:i,max:r,mid:I,count:c}}async function w(e,a){if(!a)return[];const{field:s,field2:l,field3:n,fieldDelimiter:o}=e,t=e.valueExpression,i=e.normalizationType,r=e.normalizationField,u=e.normalizationTotal,f=[],d=e.viewInfoParams;let c=null,z=null;if(t){if(!y){const{arcadeUtils:v}=await q();y=v}c=y.createFunction(t),z=d&&y.getViewInfo({viewingMode:d.viewingMode,scale:d.scale,spatialReference:new B(d.spatialReference)})}const I=e.fieldInfos,T=!(a[0]&&"declaredClass"in a[0]&&a[0].declaredClass==="esri.Graphic")&&I?{fields:I}:null;return a.forEach(v=>{const p=v.attributes;let m;if(t){const x=T?{...v,layer:T}:v,$=y.createExecContext(x,z);m=y.executeFunction(c,$)}else p&&(m=p[s],l&&(m=`${V(m)}${o}${V(p[l])}`,n&&(m=`${m}${o}${V(p[n])}`)));if(i&&typeof m=="number"&&isFinite(m)){const x=p&&parseFloat(p[r]);m=O(m,i,x,u)}f.push(m)}),f}async function na(e){const{attribute:a,features:s}=e,{normalizationType:l,normalizationField:n,minValue:o,maxValue:t,fieldType:i}=a,r=await w({field:a.field,valueExpression:a.valueExpression,normalizationType:l,normalizationField:n,normalizationTotal:a.normalizationTotal,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},s),u=_({normalizationType:l,normalizationField:n,minValue:o,maxValue:t}),f={value:.5,fieldType:i},d=i==="esriFieldTypeString"?Q({values:r,supportsNullCount:u,percentileParams:f}):U({values:r,minValue:o,maxValue:t,useSampleStdDev:!l,supportsNullCount:u,percentileParams:f});return Z(d,i==="esriFieldTypeDate")}async function ta(e){const{attribute:a,features:s}=e,l=await w({field:a.field,field2:a.field2,field3:a.field3,fieldDelimiter:a.fieldDelimiter,valueExpression:a.valueExpression,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},s),n=H(l);return J(n,a.domains,a.returnAllCodedValues,a.fieldDelimiter)}async function la(e){const{attribute:a,features:s}=e,{field:l,normalizationType:n,normalizationField:o,normalizationTotal:t,classificationMethod:i}=a,r=await w({field:l,valueExpression:a.valueExpression,normalizationType:n,normalizationField:o,normalizationTotal:t,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},s),u=K(r,{field:l,normalizationType:n,normalizationField:o,normalizationTotal:t,classificationMethod:i,standardDeviationInterval:a.standardDeviationInterval,numClasses:a.numClasses,minValue:a.minValue,maxValue:a.maxValue});return L(u,i)}async function sa(e){const{attribute:a,features:s}=e,{field:l,normalizationType:n,normalizationField:o,normalizationTotal:t,classificationMethod:i}=a,r=await w({field:l,valueExpression:a.valueExpression,normalizationType:n,normalizationField:o,normalizationTotal:t,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},s);return W(r,{field:l,normalizationType:n,normalizationField:o,normalizationTotal:t,classificationMethod:i,standardDeviationInterval:a.standardDeviationInterval,numBins:a.numBins,minValue:a.minValue,maxValue:a.maxValue})}async function oa(e){const{attribute:a,features:s}=e,{field:l,radius:n,fieldOffset:o,transform:t,spatialReference:i,size:r}=a,u=aa(s,t,i,r),{count:f,min:d,max:c,mean:z,stdDev:I}=ea(u,n,o,l,r[0],r[1]);return{count:f,min:d,max:c,avg:z,stddev:I}}export{la as classBreaks,oa as heatmapStatistics,sa as histogram,na as summaryStatistics,ta as uniqueValues};
