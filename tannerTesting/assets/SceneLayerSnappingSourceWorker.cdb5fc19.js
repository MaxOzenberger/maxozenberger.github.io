import{iK as l,h4 as u,hc as g,a5 as x,a7 as V,n as p,k as v,t as b,b3 as L,gI as C,hp as m}from"./index.3255d2a5.js";import{v as j,b as I,j as P}from"./lineSegment.1a0fd96e.js";import{R as S,k as _,N as E}from"./sphere.67ec4acb.js";import{V as y}from"./Octree.449e609a.js";import{m as T}from"./edgeProcessing.44ee33a6.js";import"./mat3f64.9180efcb.js";import"./mat4f64.9070f685.js";import"./quatf64.1dc83f1c.js";import"./plane.a0a08b54.js";import"./Util.3efb1a6b.js";import"./deduplicate.97d7ef01.js";import"./Indices.27b9c798.js";import"./InterleavedLayout.a42ad5fa.js";import"./BufferView.32a50625.js";import"./types.bf551170.js";import"./VertexAttribute.34e3daf1.js";import"./glUtil.9de5d1d0.js";import"./enums.3c1fa5b5.js";import"./VertexElementDescriptor.5da9dfe9.js";const $=1e3;function k(t,o,e){const i=S(),n=_(i);return l(n,n,t,.5),l(n,n,o,.5),i[3]=u(n,t),g(n,n,e),i}let f=class{constructor(){this._idToComponent=new Map,this._components=new y(t=>t.bounds),this._edges=new y(t=>t.bounds),this._tmpLineSegment=j(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),v(o),await this._ensureEdgeLocations(t,o);const e=[];return this._edges.forEachNeighbor(i=>(this._addCandidates(t,i,e),e.length<$),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,o){const e=[];if(this._components.forEachNeighbor(s=>{if(b(s.info)){const{id:a,uid:d}=s;e.push({id:a,uid:d})}return!0},t.bounds),!e.length)return;const i={components:e},n=await this.remoteClient.invoke("fetchAllEdgeLocations",i,L(o,{}));for(const s of n.components)this._setFetchEdgeLocations(s)}async add(t){const o=new h(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const e=[];this._edges.forEachNeighbor(i=>(i.component===o&&e.push(i),!0),o.bounds),this._edges.remove(e),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(b(o)||t.uid!==o.uid)return;const e=T.createView(t.locations),i=new Array(e.count),n=p(),s=p();for(let r=0;r<e.count;r++){e.position0.getVec(r,n),e.position1.getVec(r,s);const c=k(n,s,t.origin),w=new N(o,r,c);i[r]=w}this._edges.add(i);const{objectIds:a,origin:d}=t;o.info={locations:e,objectIds:a,origin:d}}_addCandidates(t,o,e){const{info:i}=o.component,{origin:n,objectIds:s}=i,a=i.locations,d=a.position0.getVec(o.index,this._tmpP1),r=a.position1.getVec(o.index,this._tmpP2);g(d,d,n),g(r,r,n);const c=s[a.componentIndex.get(o.index)];this._addEdgeCandidate(t,c,d,r,e),this._addVertexCandidate(t,c,d,e),this._addVertexCandidate(t,c,r,e)}_addEdgeCandidate(t,o,e,i,n){if(!(t.types&C.EDGE))return;const s=_(t.bounds),a=I(e,i,this._tmpLineSegment),d=P(a,s,this._tmpP3);E(t.bounds,d)&&n.push({type:"edge",objectId:o,target:m(d),distance:u(s,d),start:m(e),end:m(i)})}_addVertexCandidate(t,o,e,i){if(!(t.types&C.VERTEX))return;const n=_(t.bounds);E(t.bounds,e)&&i.push({type:"vertex",objectId:o,target:m(e),distance:u(n,e)})}};f=x([V("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);const tt=f;class h{constructor(o,e){this.id=o,this.bounds=e,this.info=null,this.uid=++h.uid}}h.uid=0;class N{constructor(o,e,i){this.component=o,this.index=e,this.bounds=i}}export{tt as default};
